From: Wei Fu <fuweid89@gmail.com>
Date: Fri, 12 Mar 2021 15:37:07 +0800
Subject: runtime: ignore file-already-closed error if dead shim

fix: #5130

Signed-off-by: Wei Fu <fuweid89@gmail.com>

Origin: backport, https://github.com/containerd/containerd/pull/5174
---
 runtime/v2/shim_unix.go      | 7 +++----
 runtime/v2/shim_unix_test.go | 4 ++++
 2 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/runtime/v2/shim_unix.go b/runtime/v2/shim_unix.go
index 898839b..e5d8305 100644
--- a/runtime/v2/shim_unix.go
+++ b/runtime/v2/shim_unix.go
@@ -22,10 +22,12 @@ import (
 	"context"
 	"io"
 	"net"
+	"os"
 	"path/filepath"
 	"time"
 
 	"github.com/containerd/fifo"
+	"github.com/pkg/errors"
 	"golang.org/x/sys/unix"
 )
 
@@ -34,12 +36,9 @@ func openShimLog(ctx context.Context, bundle *Bundle, _ func(string, time.Durati
 }
 
 func checkCopyShimLogError(ctx context.Context, err error) error {
-	// When using a multi-container shim, the fifo of the 2nd to Nth
-	// container will not be opened when the ctx is done. This will
-	// cause an ErrReadClosed that can be ignored.
 	select {
 	case <-ctx.Done():
-		if err == fifo.ErrReadClosed {
+		if err == fifo.ErrReadClosed || errors.Is(err, os.ErrClosed) {
 			return nil
 		}
 	default:
diff --git a/runtime/v2/shim_unix_test.go b/runtime/v2/shim_unix_test.go
index 39c4bc0..a14357e 100644
--- a/runtime/v2/shim_unix_test.go
+++ b/runtime/v2/shim_unix_test.go
@@ -20,6 +20,7 @@ package v2
 
 import (
 	"context"
+	"os"
 	"testing"
 
 	"github.com/containerd/fifo"
@@ -43,6 +44,9 @@ func TestCheckCopyShimLogError(t *testing.T) {
 	if err := checkCopyShimLogError(ctx, nil); err != nil {
 		t.Fatalf("should return the actual error after context is done, but %v", err)
 	}
+	if err := checkCopyShimLogError(ctx, os.ErrClosed); err != nil {
+		t.Fatalf("should return the actual error after context is done, but %v", err)
+	}
 	if err := checkCopyShimLogError(ctx, fifo.ErrRdFrmWRONLY); err != fifo.ErrRdFrmWRONLY {
 		t.Fatalf("should return the actual error after context is done, but %v", err)
 	}
