#!/usr/bin/make -f

include /usr/share/dpkg/default.mk

PKG        := github.com/containerd/containerd
GO_LDFLAGS += -X $(PKG)/version.Version=$(DEB_VERSION_UPSTREAM)
GO_LDFLAGS += -X $(PKG)/version.Revision=$(DEB_VERSION)
GEN_MAN    := $(CURDIR)/_build/src/$(PKG)/gen_man.go
EXCLUDES   += cmd/protoc-gen-gogoctrd cmd/gen-manpages cmd/containerd-stress
EXCLUDES   += runtime/v2/example/cmd
CRI_FILE   += cmd/containerd/builtins_cri.go pkg/cri
CRI_FILE   += vendor/k8s.io
CRI_FILE   += vendor/github.com/containerd/imgcrypt
CRI_FILE   += vendor/github.com/containerd/nri

# riscv64 doesn't support cgo
# https://github.com/golang/go/issues/36641
ifeq (0, $(shell GOCACHE=$(CURDIR)/_build/go-build go env CGO_ENABLED))
TAGS     += no_btrfs
EXCLUDES += snapshots/btrfs
endif

export DH_GOLANG_GO_GENERATE   := 1
export DH_GOLANG_EXCLUDES      := $(EXCLUDES)
export DH_GOLANG_INSTALL_EXTRA := ./pkg/seccomp/fixtures

%:
	dh $@ --buildsystem=golang --with=golang --builddirectory=_build

override_dh_auto_configure:
	dh_auto_configure

	echo "package containerd" >> $(GEN_MAN)
	echo "//go:generate go run cmd/gen-manpages/main.go containerd.8 $(CURDIR)/man" >> $(GEN_MAN)
	echo "//go:generate go run cmd/gen-manpages/main.go ctr.8 $(CURDIR)/man" >> $(GEN_MAN)

override_dh_auto_build:
	dh_auto_build -- -tags '$(TAGS)' -ldflags '$(GO_LDFLAGS)'

	mkdir -p man
	make man/containerd-config.8
	make man/containerd-config.toml.5

	sed 's|/usr/local/bin|/usr/bin|' containerd.service > debian/containerd.service
	mkdir -vp debian/bash-completion
	install -m644 -T /usr/share/gocode/src/github.com/urfave/cli/autocomplete/bash_autocomplete \
		debian/bash-completion/ctr
	mkdir -vp debian/zsh-completion
	sed 's|$$PROG|ctr|g' /usr/share/gocode/src/github.com/urfave/cli/autocomplete/zsh_autocomplete > \
		debian/zsh-completion/_ctr

override_dh_auto_test:
	dh_auto_test -- -tags '$(TAGS)'

override_dh_auto_install:
	DH_GOLANG_EXCLUDES="$(EXCLUDES) $(CRI_FILE) gen_man.go" dh_auto_install
